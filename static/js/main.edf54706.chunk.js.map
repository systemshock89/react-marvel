{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","async","res","fetch","url","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","this","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","Component","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","componentDidMount","render","errorMessage","spinner","content","View","onClick","mjolnir","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","renderItems","arr","i","tabIndex","props","onCharSelected","onKeyPress","e","key","disabled","Skeleton","CharInfo","charId","componentDidUpdate","prevProps","prevState","skeleton","ErrorBoundary","componentDidCatch","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edf54706.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    \r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n\r\n        // если картинка находится в папке public:\r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/'; // пер-я начинается с подчеркивания - говорит о том, что это запрещено изменять\r\n    _apiKey = 'apikey=a69aadd3cee4bd52ac851e95515c1aaa';\r\n    _baseOffset = 210; // начнем с персонажа №210 тк вначале мало информации в персах\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n    \r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`); // объект ошибки\r\n            // оператор throw выкидывает новую ошибку\r\n        }\r\n    \r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter); // вернем массив с объектами, кот-е нужны\r\n    }\r\n\r\n    getCharacter = async (id) => { // т.к getResource выполняется ассинхронно, то чтоб получить пер-ю res нужно подождать, добавив async await\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    // метод получает большой объект с данными, а отдает только те, кот-е нам нужны\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component{\n\n    // constructor(props) {\n        // super(props);\n        // this.updateChar(); // Будет Warning: Can't call setState on a component that is not yet mounted\n        // нельзя вызывать этот метод внутри конструктора. Следствие этого: придет два объекта при вызове (минус для оптимизации):\n        // см ур.151\n        // .getAllCharacters()\n        // .then(res => console.log(res))\n    // }\n\n    state = {\n        char: {},\n        // name: null,\n        // description: null,\n        // thumbnail: null,\n        // homepage: null,\n        // wiki: null\n        loading: true, // идет загрузка объекта или нет\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    // когда персонаж загрузился\n    onCharLoaded = (char) => {\n        this.setState({\n            char, // char: char\n            loading: false, // как только загрузятся данные, позиция становится false\n        }) \n    }\n\n    // когда персонаж уже существует, нажимаем кнопку try it и загружаем новгго\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    // отлавливаем ошибку 404, кот-я появляется если такого пользователя нет\n    onError = () => {\n        this.setState({\n            loading: false, \n            error: true \n        }) \n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000); // создадим случайное число в определенном промежутке и округлим его\n        // example 1011005\n        \n        this.onCharLoading(); // перед тем как запустится обновление персонажа покажем спиннер\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render(){\n        const {char, loading, error} = this.state;\n        // const {char: {name, description, thumbnail, homepage, wiki}, loading} = this.state;\n        // const {name, description, thumbnail, homepage, wiki} = this.state;\n\n        // если необходимо несколько вещей отображать в зависимости от состояний:\n        const errorMessage = error ?  <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char} /> : null; // контент помещается на страницу тогда, когда нет загрузки, но при этом нет ошибки\n\n        return (\n            <div className=\"randomchar\">\n\n                {errorMessage}\n                {spinner}\n                {content}\n                {/* {loading ? <Spinner/> : <View char={char} />} */}\n\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\n// простой рендерящий компонент\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return(\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nclass CharList extends Component{\n\n    state = {\n        charList: [],\n        loading: true, // запускается при первичной загрузке первых 9 персов\n        error: false,\n        newItemLoading: false, // запускается во время загрузки новых эл-тов после клика \"показать еще\"\n        offset: 210, // каждый раз когда завершен запрос на сервер увеличивает отступ на 9 персонажей (можно вставить большое число и потестировать ситуацию, когда закончились персонажи)\n        charEnded: false // если закончились персонажи\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest(); \n        // Первый раз посылаем запрос на сервер, не передавая offset (он будет подставлен из _baseOffset)\n    }\n\n    // запрос на сервер\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n        .then(this.onCharListLoaded)\n        .catch(this.onError)\n    }\n\n    // когда запустился запрос onRequest и там что-то грузится, переключим состояние в newItemLoading: true\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    // когда персонажи загрузились получаем новые данные, из которых будем формировать новое состояние\n    // если мы первый раз запускаем этот метод, то в ...charList пустой массив, кот-й ни во что не развернется\n    // и у нас будет только ...newCharList, кот-я развернется в новые эл-ты.\n    // В последующих запусках в ...charList будут старые эл-ты, а в ...newCharList новые.\n    // В итоге они будут складываться в один массив.\n    onCharListLoaded = (newCharList) => {\n\n        /*\n        Ситауция - когда загрузились все персонажи и подгружать больше нечего.\n        При клике на кнопку \"загрузить еще\" не будет ошибки, тк бекэнд спроектирован правильно и пришлет пустой массив.\n        Но кнопку надо скрыть. Лучше стилями, тк если ее физически удалять, то компонент надо будет перерисовывать.\n\n        Здесь в логиге не реализован случай:\n        Когда последние 9 эл-то приходят, то кнопка будет удаляться.\n\n        Также не реализовано запоминание количества уже загруженных эл-тов на страницу\n        \n        Динамически вычислим, если длина нового массива < 9 и помещаем ended в state\n        */\n        let ended = false;\n        if(newCharList.length < 9){\n            ended = true;\n        }\n\n        // формируем не 9 персонажей, а подгружаем каждый раз еще по 9. state зависит от предыдущуего stat'а. \n        // Вовзращаем объект из ф-и setState и передаем charList, подвергнутый деструктуризации\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList], // разворачиваем старый массив charList и добавляем newCharList\n            loading: false, \n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        })) \n\n        // this.setState({\n        //     charList, \n        //     loading: false, \n        //     newItemLoading: false\n        // }) \n    }\n\n    onError = () => {\n        this.setState({\n            loading: false, \n            error: true \n        }) \n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={this.setRef}\n                    key={item.id}\n                    onClick={() => {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }}\n                        onKeyPress={(e) => {\n                            if (e.key === ' ' || e.key === \"Enter\") {\n                                this.props.onCharSelected(item.id);\n                                this.focusOnItem(i);\n                            }\n                        }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render (){\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ?  <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading} \n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired // чтобы была ф-я и чтобы пропс был передан\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\nimport MarvelService from '../../services/MarvelService';\r\n\r\nimport './charInfo.scss';\r\n\r\nclass CharInfo extends Component {\r\n\r\n    state = {\r\n        char: null,\r\n        loading: false, // этот компонент при загрузке страницы не должен загружаться. Там должна быть заглушка. А загрузка произойдет по действию пользователя\r\n        error: false,\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    // на всякий случай, если char изначально не null\r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    // сработает когда приходит новый props, либо изменится state, либо forceUpdate() - исп-ся редко\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // если просто вызвать this.updateChar(); то произойдет зацикливание и ошибка\r\n        \r\n        if(this.props.charId !== prevProps.charId){\r\n            this.updateChar();\r\n        }\r\n\r\n    }\r\n\r\n    updateChar = () => {\r\n        // ориентируемся на пропсы\r\n        const {charId} = this.props;\r\n        if(!charId){\r\n            return;\r\n        }\r\n\r\n        this.onCharLoading();\r\n\r\n        this.marvelService\r\n            .getCharacter(charId)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char, \r\n            loading: false, \r\n        }) \r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false, \r\n            error: true \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        const {char, loading, error} = this.state;\r\n\r\n        const skeleton = char || loading || error ? null : <Skeleton/>\r\n        const errorMessage = error ?  <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error || !char) ? <View char={char} /> : null; // не загрузка, не ошибка, но при этом есть персонаж\r\n\r\n        return (\r\n            <div className=\"char__info\">\r\n                {skeleton}\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"char__basics\">\r\n            <img src={thumbnail} alt={name} style={imgStyle}/>\r\n            <div>\r\n                <div className=\"char__info-name\">{name}</div>\r\n                <div className=\"char__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"char__descr\">\r\n            {description}\r\n        </div>\r\n        <div className=\"char__comics\">Comics:</div>\r\n        <ul className=\"char__comics-list\">\r\n            {comics.length > 0 ? null : 'Нет комиксов'}\r\n            {\r\n                comics.map((item, i) => {\r\n                    \r\n                    if(i > 9) return; // если в массиве много эл-то, то этот способ даст просадки по производительности, тк будет проходится по всем ним\r\n                    // нужно переписывать на стандартный цикл с break. Но формировать новый массив, а не мутировать текущий\r\n\r\n                    return (\r\n                        <li key={i} className=\"char__comics-item\">\r\n                            {item.name}\r\n                        </li> \r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number // обязательно число\r\n}\r\n\r\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        // компонет, кот-й был передан внутрь этого компонента\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null // для поднятия состояния\n    }\n    \n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render (){\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>                \n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>              \n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>                     \n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
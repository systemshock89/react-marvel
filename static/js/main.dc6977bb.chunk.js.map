{"version":3,"sources":["components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","useMarvelService","loading","request","error","clearError","setLoading","useState","setError","useCallback","async","url","method","body","headers","response","fetch","ok","Error","status","data","json","e","message","useHttp","_apiBase","_apiKey","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","title","price","prices","getAllCharacters","offset","results","map","getCharacter","res","getAllComics","View","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","Component","state","componentDidCatch","errorInfo","console","log","this","setState","render","children","MainPage","selectedChar","decoration","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","AppBanner","avengers","avengersLogo","ComicsPage","AppHeader","to","end","isActive","color","App","basename","element","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.dc6977bb.chunk.js","sourcesContent":["const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    \r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n\r\n        // если картинка находится в папке public:\r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\n// файл MarvelService.js не будет переименовывать, тк это специализированный компонент, где раньше был класс, переписанный на хук\r\n// а вот к самому хуку добавим use\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'; // пер-я начинается с подчеркивания - говорит о том, что это запрещено изменять\r\n    const _apiKey = 'apikey=a69aadd3cee4bd52ac851e95515c1aaa';\r\n    const _baseOffset = 210; // начнем с персонажа №210 тк вначале мало информации в персах\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter); // вернем массив с объектами, кот-е нужны\r\n    }\r\n\r\n    const getCharacter = async (id) => { // т.к getResource выполняется ассинхронно, то чтоб получить пер-ю res нужно подождать, добавив async await\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics); \r\n    }  \r\n\r\n    // метод получает большой объект с данными, а отдает только те, кот-е нам нужны\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    };\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            price: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n        }\r\n    };\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, getAllComics, clearError};\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\n// хук позволяет отправлять запросы, обрабатывать р-ты и сохранять локальные состояния\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false); \r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type' : 'application/json'}) => {\r\n        \r\n        setLoading(true); // запускается при первичной загрузке первых 9 персов\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`); // объект ошибки\r\n                // оператор throw выкидывает новую ошибку\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    // ф-я чистит ошибки (вместо  setError(e.message) в catch() ставит null)\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useEffect, useState } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({});\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n \n    // когда персонаж загрузился\n    const onCharLoaded = (char) => {\n        setChar(char); // char: char\n    }\n\n    const updateChar = () => {\n\n        // если запрос вызвал ошибку, то по следующему нажатию на кнопку \"Try it\" подгрузить нового перса не получится, тк появилась js ошибка\n        // Чтобы этого не произошло, нужно перед каждым новым запросом чистить ошибку\n        clearError();\n\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000); // создадим случайное число в определенном промежутке и округлим его\n        // example 1011005\n        \n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    // если необходимо несколько вещей отображать в зависимости от состояний:\n    const errorMessage = error ?  <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? <View char={char} /> : null; // контент помещается на страницу тогда, когда нет загрузки, но при этом нет ошибки\n\n    return (\n        <div className=\"randomchar\">\n\n            {errorMessage}\n            {spinner}\n            {content}\n            {/* {loading ? <Spinner/> : <View char={char} />} */}\n\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\n// простой рендерящий компонент\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return(\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false); // запускается во время загрузки новых эл-тов после клика \"показать еще\"\n    const [offset, setOffset] = useState(210); // каждый раз когда завершен запрос на сервер увеличивает отступ на 9 персонажей (можно вставить большое число и потестировать ситуацию, когда закончились персонажи)\n    const [charEnded, setCharEnded] = useState(false); // если закончились персонажи\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => { // useEffect запускается после рендера, поэтому в этом случае мы можем исп-ть стрелочную ф-ю выше, чем она объявлена\n        onRequest(offset, true);\n    }, [])\n\n    // запрос на сервер\n    const onRequest = (offset, initial) => {\n        // initial: true - первичная загрузка\n        // initial: false - повторная загрузка по нажатию кнопки \"показать еще\"\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);     \n        getAllCharacters(offset)\n        .then(onCharListLoaded)\n    }\n\n    // когда персонажи загрузились получаем новые данные, из которых будем формировать новое состояние\n    // если мы первый раз запускаем этот метод, то в ...charList пустой массив, кот-й ни во что не развернется\n    // и у нас будет только ...newCharList, кот-я развернется в новые эл-ты.\n    // В последующих запусках в ...charList будут старые эл-ты, а в ...newCharList новые.\n    // В итоге они будут складываться в один массив.\n    const onCharListLoaded = (newCharList) => {\n\n        /*\n        Ситауция - когда загрузились все персонажи и подгружать больше нечего.\n        При клике на кнопку \"загрузить еще\" не будет ошибки, тк бекэнд спроектирован правильно и пришлет пустой массив.\n        Но кнопку надо скрыть. Лучше стилями, тк если ее физически удалять, то компонент надо будет перерисовывать.\n\n        Здесь в логиге не реализован случай:\n        Когда последние 9 эл-то приходят, то кнопка будет удаляться.\n\n        Также не реализовано запоминание количества уже загруженных эл-тов на страницу\n        \n        Динамически вычислим, если длина нового массива < 9 и помещаем ended в state\n        */\n        let ended = false;\n        if(newCharList.length < 9){\n            ended = true;\n        }\n\n        // формируем не 9 персонажей, а подгружаем каждый раз еще по 9. state зависит от предыдущуего stat'а. \n        // Вовзращаем объект из ф-и setState и передаем charList, подвергнутый деструктуризации\n        setCharList(charList => [...charList, ...newCharList]); // разворачиваем старый массив charList и добавляем newCharList\n        // setLoading(loading => false);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9)\n        setCharEnded(charEnded => ended);\n\n        // this.setState({\n        //     charList, \n        //     loading: false, \n        //     newItemLoading: false\n        // }) \n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }}\n                        onKeyPress={(e) => {\n                            if (e.key === ' ' || e.key === \"Enter\") {\n                                props.onCharSelected(item.id);\n                                focusOnItem(i);\n                            }\n                        }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ?  <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null; // есть загрузка, но не загрузка новых компонетов: \n    // тогда спиннер грузится только при первой загрузке страницы. А при нажатии \"показать еще\" спиннера уже нет\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading} \n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired // чтобы была ф-я и чтобы пропс был передан\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = (props) => {\r\n\r\n    const [char, setChar] = useState(null);\r\n\r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar()\r\n    }, [props.charId])\r\n\r\n   const updateChar = () => {\r\n        clearError();\r\n        \r\n        // ориентируемся на пропсы\r\n        const {charId} = props;\r\n        if(!charId){\r\n            return;\r\n        }\r\n\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton/>\r\n    const errorMessage = error ?  <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char} /> : null; // не загрузка, не ошибка, но при этом есть персонаж\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"char__basics\">\r\n            <img src={thumbnail} alt={name} style={imgStyle}/>\r\n            <div>\r\n                <div className=\"char__info-name\">{name}</div>\r\n                <div className=\"char__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"char__descr\">\r\n            {description}\r\n        </div>\r\n        <div className=\"char__comics\">Comics:</div>\r\n        <ul className=\"char__comics-list\">\r\n            {comics.length > 0 ? null : 'Нет комиксов'}\r\n            {\r\n                comics.map((item, i) => {\r\n                    \r\n                    if(i > 9) return; // если в массиве много эл-то, то этот способ даст просадки по производительности, тк будет проходится по всем ним\r\n                    // нужно переписывать на стандартный цикл с break. Но формировать новый массив, а не мутировать текущий\r\n\r\n                    return (\r\n                        <li key={i} className=\"char__comics-item\">\r\n                            {item.name}\r\n                        </li> \r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number // обязательно число\r\n}\r\n\r\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        // компонет, кот-й был передан внутрь этого компонента\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null); // для поднятия состояния\r\n    \r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>                \r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>              \r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>                     \r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false); \n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false); \n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);     \n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n\n        let ended = false;\n        if(newComicsList.length < 8){\n            ended = true;\n        }\n\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 8)\n        setComicsEnded(ended);\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                        <a href=\"#\">\n                            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                            <div className=\"comics__item-name\">{item.title}</div>\n                            <div className=\"comics__item-price\">{item.price}</div>\n                        </a>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ?  <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null; \n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading} \n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return(\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import {Link, NavLink} from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                        end \n                        style={({ isActive }) => ({ color: isActive ? '#9f0013' : 'inherit' })}\n                        to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink \n                        end \n                        style={({ isActive }) => ({ color: isActive ? '#9f0013' : 'inherit' })}\n                        to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport {MainPage, ComicsPage} from '../pages'; // не указываем файл index.js тк webpack при обращение к папке ищет файл index.js\nimport AppHeader from \"../appHeader/AppHeader\";\n\nconst App = () => {\n    return (\n        <Router basename={'/react-marvel'}>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route path=\"/\" element={<MainPage/>}/>\n                        <Route path=\"/comics\" element={<ComicsPage/>}/>\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client'; // for react 18\n// import ReactDOM from 'react-dom'; // for react 17\nimport App from './components/app/App';\nimport './style/style.scss';\nimport { flushSync } from 'react-dom';\n\n// for react 18\nReactDOM\n  .createRoot(document.getElementById('root'))\n  .render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n\n// for react 17\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n"],"sourceRoot":""}